<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blackgreen.dios.mappers.IGoodsMapper">

    <select id="selectColorsByItemIndex"
            resultType="com.blackgreen.dios.entities.store.ItemColorEntity">
        SELECT `color`.`item_index` AS `itemIndex`,
               `color`.`color`       AS `color`
        FROM `dios_store`.`item_colors` AS `color`
                 LEFT JOIN `dios_store`.`items` AS `item` ON `item`.`index` = `color`.`item_index`
        WHERE `color`.`item_index` = #{itemIndex}
    </select>

    <select id="selectColorByItemIndex"
            resultType="com.blackgreen.dios.entities.store.ItemColorEntity">
        SELECT `color`.`item_index` AS `itemIndex`,
               `color`.`color`       AS `color`
        FROM `dios_store`.`item_colors` AS `color`
                 LEFT JOIN `dios_store`.`items` AS `item` ON `item`.`index` = `color`.`item_index`
        WHERE `color`.`item_index` = #{itemIndex}
    </select>

    <select id="selectItemCategory"
            resultType="com.blackgreen.dios.entities.store.ItemCategoryEntity">
        SELECT `id`   AS `id`,
               `text` AS `text`
        FROM `dios_store`.`item_categories`
        ORDER BY `text` DESC
    </select>

    <select id="selectItemCategoryById"
            resultType="com.blackgreen.dios.entities.store.ItemCategoryEntity">
        SELECT `id`   AS `id`,
               `text` AS `text`
        FROM `dios_store`.`item_categories`
        WHERE `id` = #{id}
    </select>

    <select id="selectSellerByIndexExceptImage"
            resultType="com.blackgreen.dios.entities.store.SellerEntity">
        SELECT `index`          AS `index`,
               `store_name`     AS `storeName`,
               `homepage`       AS `homePage`,
               `contact_first`  AS `contactFirst`,
               `contact_second` AS `contactSecond`,
               `contact_third`  AS `contactThird`
        FROM `dios_store`.`seller`
        WHERE `index` = #{index}

    </select>

    <select id="selectSellerImageByIndex"
            resultType="com.blackgreen.dios.entities.store.SellerEntity">
        SELECT `image_name` AS `imageName`,
               `image_mime` AS `imageMime`,
               `image_data` AS `imageData`
        FROM `dios_store`.`seller`
        WHERE `index` = #{index}

    </select>

    <select id="selectSeller"
            resultType="com.blackgreen.dios.entities.store.SellerEntity">
        SELECT `index`          AS `index`,
               `store_name`     AS `storeName`,
               `homepage`       AS `homePage`,
               `contact_first`  AS `contactFirst`,
               `contact_second` AS `contactSecond`,
               `contact_third`  AS `contactThird`,
               `image_name`     AS `imageName`,
               `image_mime`     AS `imageMime`,
               `image_data`     AS `imageData`
        FROM `dios_store`.`seller`
        ORDER BY `index`
    </select>

    <select id="selectItemByIndexExceptImage"
            resultType="com.blackgreen.dios.vos.GoodsVo">
        SELECT `item`.`index`        AS `index`,
               `item`.`category_id`  AS `categoryId`,
               `item`.`seller_index` AS `sellerIndex`,
               `item`.`item_name`    AS `itemName`,
               `item`.`item_detail`  AS `itemDetail`,
               `item`.`price`        AS `price`,
               `item`.`count`        AS `count`,
               `item`.`created_on`   AS `createdOn`,
               `color`.`item_index`  AS `colorItemIndex`,
               `size`.`item_index`   AS `SizeItemIndex`

        FROM `dios_store`.`items` AS `item`
                 LEFT JOIN `dios_store`.`item_colors` AS `color` ON `item`.`index` = `color`.`item_index`
                 LEFT JOIN `dios_store`.`item_sizes` AS `size` ON `item`.`index` = `size`.`item_index`
        WHERE `item`.`index` = #{index} LIMIT 1
    </select>


    <select id="selectItemTitleImageByIndex"
            resultType="com.blackgreen.dios.entities.store.ItemEntity">
        SELECT `item`.`titleimage_name` AS `titleimageName`,
               `item`.`titleimage_mime` AS `titleimageMime`,
               `item`.`titleimage_data` AS `titleimageData`

        FROM `dios_store`.`items` AS `item`
        WHERE `item`.`index` = #{index} LIMIT 1
    </select>


    <select id="selectItemImageByIndex"
            resultType="com.blackgreen.dios.entities.store.ItemImgEntity">
        SELECT `index`     AS `index`,
               `file_name` AS `fileName`,
               `file_mime` AS `fileMime`,
               `data`      AS `data`
        FROM `dios_store`.`item_img`
        WHERE `index` = #{index} LIMIT 1
    </select>

    <select id="selectSize"
            resultType="com.blackgreen.dios.entities.store.ItemSizeEntity">
        SELECT `item_index` AS `itemIndex`,
               `size`       AS `size`
        FROM `dios_store`.`item_sizes`
    </select>

    <select id="selectSizeByItemIndex"
            resultType="com.blackgreen.dios.entities.store.ItemSizeEntity">
        SELECT `size`.`item_index` AS `itemIndex`,
               `size`.`size`       AS `size`
        FROM `dios_store`.`item_sizes` AS `size`
                 LEFT JOIN `dios_store`.`items` AS `item` ON `size`.`item_index` = `item`.`index`
        WHERE `item_index` = #{itemIndex}
    </select>

    <select id="selectReviewByIndex"
            resultType="com.blackgreen.dios.entities.store.ReviewEntity">
        SELECT `index`      AS `index`,
               `user_email` AS `userEmail`,
               `item_index` AS `itemIndex`,
               `score`      AS `score`,
               `content`    AS `content`,
               `created_on` AS `createdOn`

        FROM `dios_store`.`reviews`
        WHERE `index` = #{index}
    </select>

    <delete id="deleteReviewByIndex">
        DELETE
        FROM `dios_store`.`reviews`
        WHERE `index` = #{index} LIMIT 1
    </delete>

    <select id="selectReviewsByGoodsIndex"
            resultType="com.blackgreen.dios.vos.ReviewVo">
        SELECT `review`.`index`      AS `index`,
               `review`.`user_email` AS `userEmail`,
               `review`.`item_index` AS `itemIndex`,
               `review`.`score`      AS `score`,
               `review`.`content`    AS `content`,
               `review`.`created_on` AS `createdOn`

        FROM `dios_store`.`reviews` AS `review`
                 LEFT JOIN `dios_member`.`users` AS `user` ON `review`.`user_email` = `user`.`email`
        WHERE `review`.`item_index` = #{itemIndex}
        GROUP BY `review`.`index`
        ORDER BY `review`.`index` DESC
    </select>

    <select id="selectReviewImageByIndex"
            resultType="com.blackgreen.dios.entities.store.ReviewImageEntity">
        SELECT `index`        AS `index`,
               `review_index` AS `reviewIndex`,
               `data`         AS `data`,
               `type`         AS `type`
        FROM `dios_store`.`review_images`
        WHERE `index` = #{index} LIMIT 1
    </select>

    <select id="selectReviewImagesByGoodsIndexExceptData"
            resultType="com.blackgreen.dios.entities.store.ReviewImageEntity">
        SELECT `index`        AS `index`,
               `review_index` AS `reviewIndex`
        FROM `dios_store`.`review_images`
        WHERE `review_index` = #{reviewIndex}
        ORDER BY `index`
    </select>


    <insert id="insertItemImage"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.store.ItemImgEntity">
        INSERT INTO `dios_store`.`item_img`(`index`, `file_name`, `file_mime`, `data`)
        VALUES (#{index}, #{fileName}, #{fileMime}, #{data})
    </insert>

    <insert id="insertItem"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.store.ItemEntity">
        INSERT INTO `dios_store`.`items`(`category_id`, `seller_index`, `item_name`, `item_detail`, `price`, `count`,
                                         `created_on`, `titleImage_name`, `titleImage_mime`, `titleImage_data`)
        VALUES (#{categoryId}, #{sellerIndex}, #{itemName}, #{itemDetail}, #{price}, #{count},
                IFNULL(#{createdOn}, DEFAULT(`created_on`)),
                #{titleImageName}, #{titleImageMime}, #{titleImageData})
    </insert>

    <insert id="insertItemColor"
            parameterType="com.blackgreen.dios.entities.store.ItemColorEntity">
        INSERT INTO `dios_store`.`item_colors`(`item_index`, `color`)
        VALUES (#{itemIndex}, #{color})
    </insert>

    <insert id="insertItemSize"
            parameterType="com.blackgreen.dios.entities.store.ItemSizeEntity">
        INSERT INTO `dios_store`.`item_sizes`(`item_index`, `size`)
        VALUES (#{itemIndex}, #{size})
    </insert>

    <insert id="insertReview"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.store.ReviewEntity">
        INSERT INTO `dios_store`.`reviews`(`user_email`, `item_index`, `score`, `content`)
        VALUES (#{userEmail}, #{itemIndex}, #{score}, #{content})
    </insert>

    <insert id="insertReviewImage"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.store.ReviewImageEntity">
        INSERT INTO `dios_store`.`review_images`(`review_index`, `data`, `type`)
        VALUES (#{reviewIndex}, #{data}, #{type})
    </insert>

    <insert id="insertCartItem"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.store.CartEntity">
        INSERT INTO `dios_store`.`carts`(`user_email`,`count`,`item_index`,`order_color`,`order_size`)
        VALUES (#{userEmail}, #{count}, #{itemIndex}, #{orderColor}, #{orderSize})
    </insert>

    <update id="updateReview"
            parameterType="com.blackgreen.dios.entities.store.ReviewEntity">
        UPDATE `dios_store`.`reviews`
        SET `index`      =#{index},
            `user_email` =#{userEmail},
            `item_index` =#{itemIndex},
            `score`      =#{score},
            `content`    =#{content}
        WHERE BINARY `index` = #{index}
    </update>

    <select id="selectItemCountByCategoryId"
            resultType="int">
        SELECT COUNT(0)
        FROM `dios_store`.`items` AS `item`

        <if test="criterion !=null and criterion.equals('nickName')">
            LEFT JOIN `study_member`.`users` AS `user` ON `item`.`user_email` = `user`.`email`
        </if>
        WHERE `category_id` = #{categoryId}
        <if test="criterion != null and criterion.equals('title')">
            AND REPLACE(`item_name`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion !=null and criterion.equals('all')">
            AND (REPLACE(`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`content`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%'))
        </if>
        <if test="criterion !=null and criterion.equals('nickName')">
            AND BINARY `user`.`nickname` = #{keyword}
        </if>

    </select>


    <select id="selectItemsByCategoryId"
            resultType="com.blackgreen.dios.vos.GoodsVo">
        SELECT `item`.`index` AS `index`,
        `item`.`category_id` AS `categoryId`,
        `item`.`seller_index` AS `sellerIndex`,
        `item`.`item_name` AS `itemName`,
        `item`.`item_detail` AS `itemDetail`,
        `item`.`price` AS `price`,
        `item`.`count` AS `count`,
        `item`.`created_on` AS `createdOn`,
        COUNT(`review`.`index`) AS `reviewCount`,
        `seller`.`store_name` AS `storeName`

        FROM `dios_store`.`items` AS `item`
        LEFT JOIN `dios_store`.`seller` AS `seller` ON `item`.`seller_index` = `seller`.`index`
        LEFT JOIN `dios_store`.`reviews` AS `review` ON `review`.`item_index` = `item`.`index`

        WHERE BINARY `item`.`category_id` = #{categoryId}

        <if test="criterion != null and criterion.equals('title')">
            AND REPLACE(`item`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion !=null and criterion.equals('all')">
            AND (REPLACE(`item`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`item`.`content`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%'))
        </if>
        <if test="criterion !=null and criterion.equals('nickName')">
            AND BINARY `seller`.`store_name` = #{keyword}
        </if>
        GROUP BY `item`.`index`
        ORDER BY `item`.`index` DESC
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="selectItemByIndex"
            resultType="com.blackgreen.dios.vos.GoodsVo">
        SELECT `item`.`index`        AS `index`,
               `item`.`category_id`  AS `categoryId`,
               `item`.`seller_index` AS `sellerIndex`,
               `item`.`item_name`    AS `itemName`,
               `item`.`item_detail`  AS `itemDetail`,
               `item`.`price`        AS `price`,
               `item`.`count`        AS `count`,
               `item`.`created_on`   AS `createdOn`

        FROM `dios_store`.`items` AS `item`
                 LEFT JOIN `dios_store`.`seller` AS `seller` ON `item`.`seller_index` = `seller`.`index`
                 LEFT JOIN `dios_store`.`reviews` AS `review` ON `review`.`item_index` = `item`.`index`
        WHERE BINARY `item`.`index` = #{index}
            LIMIT 1
    </select>

    <update id="updateItem"
            parameterType="com.blackgreen.dios.entities.store.ItemEntity">
        UPDATE `dios_store`.`items`
        SET `index`          = #{index},
            `category_id`    =#{categoryId},
            `seller_index`=#{sellerIndex},
            `item_name`      = #{itemName},
            `item_detail`=#{itemDetail},
            `price`=#{price},
            `count`=#{count},
            `created_on`= IFNULL(#{createdOn}, DEFAULT(`created_on`)),
            `titleImage_name`=#{titleImageName},
            `titleImage_mime`=#{titleImageMime},
            `titleImage_data`=#{titleImageData}
        WHERE BINARY `index` = #{index}
            LIMIT 1
    </update>

    <delete id="deleteItemByIndex">
        DELETE
        FROM `dios_store`.`items`
        WHERE `index` = #{index} LIMIT 1
    </delete>

</mapper>