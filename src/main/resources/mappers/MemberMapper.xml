<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blackgreen.dios.mappers.IMemberMapper">
    <insert id="insertEmailAuth"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="com.blackgreen.dios.entities.member.EmailAuthEntity">
        INSERT INTO `dios_member`.`email_auths` (`email`, `code`, `salt`, `created_on`, `expires_on`, `expired_flag`)
        VALUES (#{email}, #{code}, #{salt}, #{createdOn}, #{expiresOn}, #{isExpired})
    </insert>
    <insert id="insertUser"
            parameterType="com.blackgreen.dios.entities.member.UserEntity">
        INSERT INTO `dios_member`.`users`(`email`, `password`, `nickname`, `name`, `contact`, `address_postal`,
                                          `address_primary`, `address_secondary`)
        VALUES (#{email}, #{password}, #{nickname}, #{name}, #{contact}, #{addressPostal}, #{addressPrimary},
                #{addressSecondary})
    </insert>
    <select id="selectUserByEmail"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `goal_count`        AS `goalCount`
        FROM `dios_member`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByEmailCodeSalt"
            resultType="com.blackgreen.dios.entities.member.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `dios_member`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}

        LIMIT 1
    </select>
    <update id="updateEmailAuth"
            parameterType="com.blackgreen.dios.entities.member.EmailAuthEntity">
        UPDATE `dios_member`.`email_auths`
        SET `email`        = #{email},
            `code`         = #{code},
            `salt`         = #{salt},
            `created_on`   = #{createdOn},
            `expires_on`   = #{expiresOn},
            `expired_flag` = #{isExpired}
        WHERE BINARY `index` = #{index}
        LIMIT 1
    </update>

    <select id="selectEmailAuthByIndex" resultType="com.blackgreen.dios.entities.member.EmailAuthEntity">

        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `dios_member`.`email_auths`
        WHERE BINARY `index` = #{index}
        LIMIT 1
    </select>

    <update id="updateUser"
            parameterType="com.blackgreen.dios.entities.member.UserEntity">
        UPDATE `dios_member`.`users`
        SET `password`          = #{password},
            `nickname`          = #{nickname},
            `name`              = #{name},
            `contact`           = #{contact},
            `address_postal`    = #{addressPostal},
            `address_primary`   = #{addressPrimary},
            `address_secondary` = #{addressSecondary},
            `registered_on`     = #{registeredOn}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

    <select id="selectUserByEmailPassword"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `dios_member`.`users`
        WHERE BINARY `email` = #{email}
          AND BINARY `password` = #{password}
        LIMIT 1
    </select>

    <select id="selectUserByNameContact"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `dios_member`.`users`
        WHERE BINARY `name` = #{name}
          AND BINARY `contact` = #{contact}
        LIMIT 1
    </select>


    <select id="selectUserByNickname"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `dios_member`.`users`
        WHERE BINARY `nickname` = #{nickname}

    </select>

    <select id="selectUserByContact"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `dios_member`.`users`
        WHERE BINARY `contact` = #{contact}

    </select>





    <update id="updateUserByMayPage"
            parameterType="com.blackgreen.dios.entities.member.UserEntity">
        UPDATE `dios_member`.`users`
        SET `password`          = #{password},
            `nickname`          = #{nickname},
            `name`              = #{name},
            `contact`           = #{contact},
            `address_postal`    = #{addressPostal},
            `address_primary`   = #{addressPrimary},
            `address_secondary` = #{addressSecondary},
            `image`             = #{image},
            `image_type`        = #{imageType},
            `registered_on`     = #{registeredOn}

        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

    <select id="selectImageByEmail"
            resultType="com.blackgreen.dios.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `image`             AS `image`,
               `image_type`        AS `imageType`
        FROM `dios_member`.`users`
        WHERE BINARY `email` = #{email}
    </select>

</mapper>

